<div class="index-content">
  <div class="container">
    <div class="row product" data-product-id="<%= @product.id %>">
      <div class="col-sm-12 col-md-6 col-lg-6">
        <%= image_tag(@product.image_url, class: "img-fluid img-zoom", data_zoom_image:@product.image_url) if @product.image_url%>
        <%= link_to 'Edit', edit_product_path(@product) %> |
        <%= link_to 'Back', products_path %>

        <p class="productname">
          <%= @product.name %><br>
          <p>
            <%= @product.description %>
          </p>
          <p class="text-bold">Overview</p>
          <p class="product-galleryprice-tag">
            <%= number_to_currenclass ProductsController < ApplicationController
            before_action :set_product, only: [:show, :edit, :update, :destroy]

            # GET /products
            # GET /products.json

            def index
            if params[:q]
            search_term = params[:q]
            @products = Product.where("name LIKE ?", "%#{search_term}%")
            else
            @products = Product.all
            end
            end

            # GET /products/1
            # GET /products/1.json
            def show
            @comments = @product.comments.order("created_at DESC").paginate(:page => params[:page], :per_page => 5)
            end

            # GET /products/new
            def new
            @product = Product.new
            end

            # GET /products/1/edit
            def edit
            end

            # POST /products
            # POST /products.jsonclass ProductsController < ApplicationController
            before_action :set_product, only: [:show, :edit, :update, :destroy]

            # POST /products
            # POST /products.json
            def create
            @product = Product.new(product_params)

            respond_to do |format|
            if @product.save
            format.html { redirect_to products_url, notice: 'Product was successfully created.' }
            format.json { render :show, status: :created, location: @product }
            else
            format.html { render :new }
            format.json { render json: @product.errors, status: :unprocessable_entity }
            end
            end
            end

            # PATCH/PUT /products/1
            # PATCH/PUT /products/1.json
            def update
            respond_to do |format|
            if @product.update(product_params)
            format.html { redirect_to @product, notice: 'Product was successfully updated.' }
            format.json { render :show, status: :ok, location: @product }
            else
            format.html { render :edit }
            format.json { render json: @product.errors, status: :unprocessable_entity }
            end
            end
            end

            # DELETE /products/1
            # DELETE /products/1.json
            def destroy
            @product.destroy
            respond_to do |format|
            format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }
            format.json { head :no_content }
            end
            end

            private
            # Use callbacks to share common setup or constraints between actions.
            def set_product
            @product = Product.find(params[:id])
            end

            # Never trust parameters from the scary internet, only allow the white list through.
            def product_params
            params.require(:product).permit(:name, :description, :image_url, :colour, :price)
            end
            end
            cy(@product.price, :unit => "â‚¬") %></p>
            <p>
              <%= render 'shared/new_comment' %>
            </p>
          </div>

          <div class="col-sm-12 col-md-6 col-lg-6 star-rating productindex">
            <p>Review score:<div id="average-rating" class="rated" data-score="<%= @product.average_rating %>"></p>
            </div>
            <div class="commentsdisplay"
            <% if !@product.highest_rating_comment.nil? %>
            <%= @product.highest_rating_comment.body %>
            <% end %>
            <%= render 'shared/comments' %>
            <%= will_paginate @comments %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
